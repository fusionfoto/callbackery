% my $p = shift;
<%= $p->{class} %>
===========
Version: #VERSION#
Date: #DATE#

<%= $p->{class} %> is a cool web application.

You are looking at a sample CallBackery application. It comes complete
with a classic "configure - make - install" setup. 

Prerequisite
------------

Get a copy of the Qooxdoo SDK from www.qooxdoo.org.
 
 mkdir ~/src
 cd ~/src
 wget http://downloads.sourceforge.net/qooxdoo/qooxdoo-5.0-sdk.zip
 unzip qooxdoo-5.0-sdk.zip

Setup
-----

 ./configure --prefix=$HOME/opt/<%= $p->{name} %> --with-qooxdoo-sdk-dir=$HOME/src/qooxdoo-5.0-sdk
 make
 
Configure will check if the necessary items are in place and give
hints on how to fix the situation if something is missing.

Development
-----------

While developing the application it is conveniant to NOT have to install it
before runnning. You can actually serve the Qooxdoo source directly
using the built-in Mojo webserver.

  cd frontend && make source
  cd bin
  ./<%= $p->{name} %>-source-mode.sh

You can now connect to the CallBackery app with your web browser.

If you need any additional perl modules, write their names into the PERL_MODULES
file and run ./bootstrap.

Installation
------------

To install the application, just run

   make install

You can now run <%= $p->{name} %>.pl in reverse proxy mode.

Packaging
---------

Before release, make sure to update CHANGES, VERSION and run ./bootstrap

You can also package the application as a nice tar.gz file, it will contain
a mini copy of cpan, so that all perl modules can be rebuilt at the
destination.  If you want to make sure that your project builds with perl
5.10.1, make sure to set PERL to a perl 5.10.1 interpreter, remove your
thirdparty directory and configure again.  Now all modules to make your
project fly with an old perl will be included in the distribution.

   make dist

Enjoy!

<%= "$p->{fullName} <$p->{email}>" %>
